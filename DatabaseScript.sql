IF OBJECT_ID('dbo.GROUP_USERS', 'U') IS NOT NULL 
	DROP TABLE "dbo"."GROUP_USERS"
IF OBJECT_ID('dbo.SECTION', 'U') IS NOT NULL 
	DROP TABLE dbo.SECTION
IF OBJECT_ID('dbo.GROUP', 'U') IS NOT NULL 
	DROP TABLE "dbo"."GROUP"
IF OBJECT_ID('dbo.ROOM', 'U') IS NOT NULL 
	DROP TABLE dbo.ROOM
IF OBJECT_ID('dbo.LIBRARY', 'U') IS NOT NULL 
	DROP TABLE dbo.LIBRARY
IF OBJECT_ID('dbo.USERS_COURSE', 'U') IS NOT NULL 
	DROP TABLE dbo.USERS_COURSE
IF OBJECT_ID('dbo.FRIENDSHIP', 'U') IS NOT NULL 
	DROP TABLE dbo.FRIENDSHIP
IF OBJECT_ID('dbo.USERS', 'U') IS NOT NULL 
	DROP TABLE dbo.USERS
IF OBJECT_ID('dbo.COURSE', 'U') IS NOT NULL 
	DROP TABLE dbo.COURSE

CREATE TABLE USERS
(
	UFID INT NOT NULL,
	USER_NAME VARCHAR(100) NOT NULL ,
	USER_MAJOR VARCHAR(100) NOT NULL ,
	USER_ACTIVE BIT NOT NULL,
	PRIMARY KEY ( UFID )
);

CREATE TABLE COURSE
(
	COURSE_ID INT NOT NULL IDENTITY(1,1),
	COURSE_NAME VARCHAR(100) NOT NULL ,
	PRIMARY KEY ( COURSE_ID )
);

CREATE TABLE LIBRARY
(
	LIBRARY_ID INT NOT NULL IDENTITY(1,1),
	LIBRARY_NAME VARCHAR(100) NOT NULL ,
	PRIMARY KEY ( LIBRARY_ID )
);

CREATE TABLE ROOM
(
	ROOM_ID INT NOT NULL IDENTITY(1,1),
	ROOM_NAME VARCHAR(100) NOT NULL ,
	LIBRARY_ID INT NOT NULL,
	AVAILABILITY BIT NOT NULL,
	LEVEL INT NOT NULL,
	PRIMARY KEY ( ROOM_ID ),
	CONSTRAINT fk_LibRoom FOREIGN KEY ( LIBRARY_ID ) 
	REFERENCES LIBRARY( LIBRARY_ID )
);

CREATE TABLE "dbo"."SECTION"
(
	SECTION_ID INT NOT NULL IDENTITY(1,1),
	CAPACITY INT NOT NULL,
	COUNT INT NOT NULL,
	NAME VARCHAR(100) NOT NULL,
	LIBRARY_ID INT NOT NULL,
	PRIMARY KEY ( SECTION_ID ),
	CONSTRAINT fk_LibSection FOREIGN KEY ( LIBRARY_ID ) 
	REFERENCES LIBRARY( LIBRARY_ID )	
);

CREATE TABLE USERS_COURSE
(
	UFID INT,
	COURSE_ID INT,
	PRIMARY KEY ( UFID, COURSE_ID ),
	CONSTRAINT fk_User FOREIGN KEY ( UFID ) REFERENCES USERS( UFID ),
	CONSTRAINT fk_Course FOREIGN KEY ( COURSE_ID ) REFERENCES COURSE(COURSE_ID)
);

CREATE TABLE FRIENDSHIP
(
	USERS_1 INT ,
	USERS_2 INT ,
	PRIMARY KEY ( USERS_1, USERS_2 ),
	CONSTRAINT fk_User1 FOREIGN KEY (USERS_1) REFERENCES USERS(UFID),
	CONSTRAINT fk_User2 FOREIGN KEY (USERS_2) REFERENCES USERS(UFID)
);

CREATE TABLE "dbo"."GROUP"
(
	GROUP_ID INT NOT NULL IDENTITY(1,1),
	GROUP_NAME VARCHAR(100) NOT NULL,
	ROOM_ID INT NOT NULL,
	CREATOR_ID INT NOT NULL,
	COURSE_ID INT NOT NULL,
	PRIMARY KEY ( GROUP_ID ),
	CONSTRAINT fk_RoomGroup FOREIGN KEY (ROOM_ID) REFERENCES ROOM(ROOM_ID),
	CONSTRAINT fk_CourseGroup FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID),
	CONSTRAINT fk_UserGroup FOREIGN KEY (CREATOR_ID) REFERENCES USERS(UFID)
);


CREATE TABLE GROUP_USERS
(
	GROUP_ID INT NOT NULL,
	UFID INT NOT NULL,
	PRIMARY KEY (GROUP_ID, UFID),
	CONSTRAINT fk_GroupUsersUsers FOREIGN KEY (UFID) REFERENCES USERS(UFID),
	CONSTRAINT fk_GroupUsersGroup FOREIGN KEY (GROUP_ID) REFERENCES "dbo"."GROUP"(GROUP_ID) ON DELETE CASCADE
);
